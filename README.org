#+TITLE: Wrapping =saga_cmd= to chain GIS-Data conversion
#+AUTHOR: Michel Kuhlmann *TK Consult AG*
#+OPTIONS: toc:nil

#+BEGIN_SRC emacs-lisp :results silent :exports none
  (org-babel-do-load-languages
   'org-babel-load-languages
   '((emacs-lisp . t)
     (dot . t)
     (haskell . t)
     (sh . t)))
#+END_SRC  
  
* Description
  Haskell Library to wrap =saga_cmd=. 

  This is /Work In Progress/
 
* Installation
** Saga And haskell-platform
*** Linux
   #+BEGIN_SRC sh
     sudo aptitude install haskell-platform
     sudo aptitude install saga
   #+END_SRC
*** Windows with Cygwin
    - Get the [[http://www.haskell.org/platform/][haskell-platform]]
    - Install Saga with [[http://trac.osgeo.org/osgeo4w/][OSGeo4W]]
    - Put =saga_cmd= in the search path: add this line to you =$HOME/.bashrc=
      #+BEGIN_SRC sh
        export PATH="$PATH:/cygdrive/c/Program Files (x86)/SAGA-GIS
      #+END_SRC

** saga-cmd-wrapper library

   #+BEGIN_SRC sh
       git clone https://www.github.com/michelk/saga-cmd-wrapper.hs.git
       cd saga-cmd-wrapper.hs
       cabal update && cabal install
   #+END_SRC
   
   The exectuables are usually installed into =$HOME/.cabal/bin=; to
   use them you have to put them into your search path. Put this into
   your =$HOME/.bashrc=:
   #+BEGIN_SRC sh
     export PATH="$PATH:$HOME/.cabal/bin"
   #+END_SRC

* Usage 
** =sagaChain=
   =sagaChain= lets you chain =saga_cmd= commands. The program needs the
   follwing specification:
   - source-format
   - destination-format
   - parameters to use for conversion
   - input-file
     
     These combinations are currently supported, where columns are
     sources and rows destinations:
     
     | to\form     | las | xyz-grid | grid | grid-filled |
     |-------------+-----+----------+------+-------------+
     | grid        | X   | X        |      |             |
     | grid-filled | X   | X        | X    |             |
     | hillshade   | X   | X        | x    | X           |
     | contour     | X   | X        | X    | X           |
     
     where
  - grid        :: A Grid which could contain gaps
  - grid-filled :: A Grid with interpolated values
  - hillshade   :: Analytical hillshade
  - contour     :: Iso-value-lines 
                   

#+BEGIN_SRC sh :results verbatim :eval no-export
    sagaChain --from xyz-grid --to hillshade --parameters xyzSep=tabulator:xyzCellSize=0.5
#+END_SRC

* Development

In order to extend functionality

- find the wanted library and module
- create wrapper function
- define output extension 
- add chains

** Find the module
#+BEGIN_SRC sh
  cd saga-cmd-wrapper/do
  ./search <keyword> 
#+END_SRC

** Wrapper function and chain definition
   - edit =src/Math/Geometry/Saga/Data.hs=
   - add chain
   - add wrapper function
