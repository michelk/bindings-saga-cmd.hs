Haskell Library to wrap `saga_cmd`.

*Work In Progress*

* Prerequisites

**  Install saga and haskell-platform

#+BEGIN_SRC sh
  sudo aptitude install saga haskell-platform
#+END_SRC

** Install library

#+BEGIN_SRC sh
    git clone https://www.github.com/michelk/saga-cmd-wrapper.hs.git
    cd saga-cmd-wrapper.hs
    cabal update
    cabal install
#+END_SRC

* Usage

** Haskell Library
You could either use the haskell-library directly.  Eg.

#+BEGIN_SRC ghci
    ghci> :m Math.Geometry.Saga.Cmd
    ghci> xyzGridToGrid 1 "space" "dem.xyz"
#+END_SRC

** demConv

Or you could use demConv. Eg

#+BEGIN_SRC sh
    demnConv --from xyz --to hillshade --parameters xyzCellSize=1:xyzSep=tab
#+END_SRC

*** Usage demConv
#+BEGIN_SRC emacs-lisp :exports none :results silent
  (org-babel-do-load-languages
   'org-babel-load-languages
   '((sh . t)
     (emacs-lisp . t)))
#+END_SRC 
- 
#+BEGIN_SRC sh :results output
    demConv
#+END_SRC

#+RESULTS:
#+begin_example
demConv version 0.0.1.0, GPL licensed; written by Michel Kuhlmann 2013

demConv [OPTIONS] [DEM-file]
  Convert Digital Elevation Models (DEM) to diffent formats

Common flags:
  -f --from=ITEM        Source-format; currently: xyz,xyz-grid,grid
  -t --to=ITEM          Target-format; currently:
                        contour,hillshade,grid-filled
  -p --parameters=ITEM  Parameters to pass into the different conversion
                        steps
  -? --help             Display help message
  -V --version          Print version information

Possible from-to-combinations:
	      from          to
	      grid         tif
	grid-filled   hillshade
	      grid   hillshade
	  xyz-grid         tif
	      grid     contour
	  xyz-grid  grid-filled
	grid-filled         tif
	grid-filled     contour
	  xyz-grid   hillshade
	  xyz-grid        grid
	  xyz-grid     contour


Default parameters:
	xyzCellSize           1
	contourMax       10000
	contourStep           1
	 tinMethod  Opposite Neighbours
	    xyzSep       space
	contourMin           0
#+end_example

 
* Development

In order to extend functionality

- find library and module
- write wrapper-function
- add default parameters and conversion-function in demConv.hs
